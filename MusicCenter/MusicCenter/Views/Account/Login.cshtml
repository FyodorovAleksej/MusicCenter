@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}

@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}

@inject SignInManager<ApplicationUser> SignInManager
@{
    ViewData["Title"] = "Log in";
}
<div class="modal-header">
    <div class="modal-title" style="font-size:24px">@ViewData["Title"]</div>
</div>
<div class="modal-body">
    <div class="row">
        <div class="col-md-12" style="width:inherit">
            <section>
                @{ int iMy = 0;
                    string[] hrefsMy = {
                     "https://cdn3.iconfinder.com/data/icons/free-social-icons/67/facebook_circle_color-256.png",
                    "https://cdn1.iconfinder.com/data/icons/iconza-circle-social/64/697029-twitter-512.png",
                     "https://maxcdn.icons8.com/Share/icon/Logos//google_logo1600.png",
                    "http://www.iconninja.com/files/238/378/475/social-vkontakte-vk-app-music-icon.svg"};
                    var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
                    if (loginProviders.Count == 0)
                    {
                        <div>
                            <p>
                                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                for details on setting up this ASP.NET application to support logging in via external services.
                            </p>
                        </div>
                    }
                    else
                    {
                        <form ngNoForm asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                            <div style="padding-left:5%">
                                <p>
                                    @foreach (var provider in loginProviders)
                                    {
                                        <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account"><img src="@hrefsMy[iMy++]" title="@provider.Name" width="50" height="50" /></button>
                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </section>
        </div>
    </div>
</div>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}